<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
  <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">
    <!--
    <route>
      <from uri="seda:a"/>
      <to uri="seda:b"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <to uri="seda:b"/>
    </route>
    <route>
      <from ref="a"/>
      <to ref="b"/>
    </route>
    <route>
      <from uri="seda:a"/>
      <process ref="myProcessor"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <filter>
        <predicate>
          <header name="foo"/>
          <isEqualTo value="bar"/>
        </predicate>
      </filter>
      <filter>
        <predicate>
          <header name="foo"/>
          <isEqualTo value="bar"/>
        </predicate>
      </filter>
      <process ref="#myProcessor"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <intercept>
        <interceptor ref="interceptor1"/>
        <interceptor ref="#interceptor2"/>
      </intercept>
      <intercept>
        <interceptor ref="#interceptor1"/>
        <interceptor ref="interceptor2"/>
      </intercept>
      <to uri="seda:b"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <choice>
        <when>
          <predicate>
            <header name="foo"/>
            <isEqualTo value="bar"/>
          </predicate>
          <to uri="seda:b"/>
        </when>
        <when>
          <predicate>
            <header name="foo"/>
            <isNotEqualTo value="cheese"/>
          </predicate>
          <to uri="seda:c"/>
        </when>
        <otherwise>
          <to uri="seda:d"/>
        </otherwise>
      </choice>
    </route>

    <route>
      <from uri="seda:a"/>
      <filter>
        <predicate>
          <header name="foo"/>
          <isEqualTo value="bar"/>
        </predicate>
      </filter>
      <to uri="seda:b"/>
    </route>

    <route>
      <from uri="seda:a"/>
      <to>
        <uri>seda:tap</uri>
        <uri>seda:a</uri>
      </to>
    </route>

    <route>
      <from uri="seda:a"/>
      <recipientList>
        <recipients>
          <header name=""/>
        </recipients>
      </recipientList>
    </route>

    <route>
      <from uri="seda:a"/>
      <recipientList>
        <recipients>
          <header name=""/>
          <tokenize token=","/>
        </recipients>
      </recipientList>
    </route>

    <route>
      <from uri="seda:a"/>
      <filter>
        <predicate>
          <body/>
          <isNotEqualTo value="none"/>
        </predicate>
      </filter>
      <recipientList>
        <recipients>
          <body/>
        </recipients>
      </recipientList>
    </route>
-->

    <route>
      <from uri="vm:a"/>
      <split>
        <tokenize token="@"/>
        <to uri="mock:splitep"/>
      </split>
      <aggregate completionSize="10" strategyRef="aggregatorStrategy">
        <correlationExpression>
          <simple>header.cheese</simple>
        </correlationExpression>
        <to uri="direct:aggreg"/>
      </aggregate>
      <to uri="seda:b"/>
      <choice>
        <when>
          <xpath>$foo = 'bar'</xpath>
          <to uri="seda:f"/>
        </when>
        <when>
          <xpath>$foo = 'cheese'</xpath>
          <to uri="seda:c"/>
        </when>
        <otherwise>
          <to uri="seda:e"/>
        </otherwise>
      </choice>
    </route>

  </camelContext>

  <bean id="aggregatorStrategy" class="org.apache.camel.processor.aggregate.GroupedExchangeAggregationStrategy"/>
</beans>
